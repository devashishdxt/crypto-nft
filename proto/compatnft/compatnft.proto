syntax = "proto3";
package devashishdxt.cryptonft.compatnft;

import "gogoproto/gogo.proto";

option go_package = "github.com/devashishdxt/crypto-nft/x/compatnft/types";

message DenomMetadata {
    string schema = 1;
}

message NFTMetadata {
    string data = 1;
}

// IDCollection defines a type of collection with specified ID
message IDCollection {
    option (gogoproto.equal) = true;

    string denom_id = 1 [ (gogoproto.moretags) = "yaml:\"denom_id\"" ];
    repeated string token_ids = 2 [ (gogoproto.moretags) = "yaml:\"token_ids\"" ];
}

// Owner defines a type of owner
message Owner {
    option (gogoproto.equal) = true;

    string address = 1;
    repeated IDCollection id_collections = 2 [ (gogoproto.moretags) = "yaml:\"idcs\"", (gogoproto.customname) = "IDCollections", (gogoproto.nullable) = false ];
}
