syntax = "proto3";
package devashishdxt.cryptonft.cryptonft;

import "google/protobuf/any.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/devashishdxt/crypto-nft/x/cryptonft/types";

// Msg defines the Msg service.
service Msg {
    // NewClass creates a new NFT classification.
    rpc NewClass(MsgNewClass) returns (MsgNewClassResponse);

    // MintNFT mints a new NFT.
    rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);

    // BurnNFT burns an existing NFT.
    rpc BurnNFT(MsgBurnNFT) returns (MsgBurnNFTResponse);
    
    // UpdateNFT updates an existing NFT.
    rpc UpdateNFT(MsgUpdateNFT) returns (MsgUpdateNFTResponse);
  rpc UpdateClass(MsgUpdateClass) returns (MsgUpdateClassResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgNewClass {
  // creator defines creator of NFT classification
  string creator = 1;

  // id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
  string id = 2;

  // name defines the human-readable name of the NFT classification. Optional
  string name = 3;

  // symbol is an abbreviated name for nft classification. Optional
  string symbol = 4;

  // description is a brief description of nft classification. Optional
  string description = 5;

  // uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
  string uri = 6;

  // uri_hash is a hash of the document pointed by uri. Optional
  string uriHash = 7;

  // mintRestricted specifies whether NFT classification is restricts minting NFTs by others
  bool mintRestricted = 8;

  // burnRestricted specifies whether NFT classification restricts burning NFTs by others
  bool burnRestricted = 9;

  // updateRestricted specifies whether NFT classification restricts updating NFTs by others
  bool updateRestricted = 10;

  // data is the app specific metadata of the NFT class. Optional
  google.protobuf.Any data = 11;
}

message MsgNewClassResponse {
}

message MsgMintNFT {
  // creator defines creator of NFT
  string creator = 1;

  // class_id associated with the NFT, similar to the contract address of ERC721
  string classId = 2;

  // id is a unique identifier of the NFT
  string id = 3;

  // uri for the NFT metadata stored off chain
  string uri = 4;

  // uri_hash is a hash of the document pointed by uri
  string uriHash = 5;

  // receiver is the address of the receiver of the NFT
  string receiver = 6;

  // data is an app specific data of the NFT. Optional
  google.protobuf.Any data = 8;
}

message MsgMintNFTResponse {
}

message MsgBurnNFT {
  // creator defines sender of Burn message
  string creator = 1;

  // classId associated with the NFT, similar to the contract address of ERC721
  string classId = 2;

  // nftId is a unique identifier of the NFT
  string nftId = 3;
}

message MsgBurnNFTResponse {
}

message MsgUpdateNFT {
  // creator defines sender of Update message
  string creator = 1;

  // classId associated with the NFT, similar to the contract address of ERC721
  string classId = 2;

  // nftId is a unique identifier of the NFT
  string nftId = 3;

  // uri for the NFT metadata stored off chain
  string uri = 4;

  // uri_hash is a hash of the document pointed by uri
  string uriHash = 5;

  // data is an app specific data of the NFT. Optional
  google.protobuf.Any data = 6;
}

message MsgUpdateNFTResponse {
}

message MsgUpdateClass {
  // creator defines creator of NFT classification
  string creator = 1;

  // id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
  string id = 2;

  // name defines the human-readable name of the NFT classification. Optional
  string name = 3;

  // symbol is an abbreviated name for nft classification. Optional
  string symbol = 4;

  // description is a brief description of nft classification. Optional
  string description = 5;

  // uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
  string uri = 6;

  // uri_hash is a hash of the document pointed by uri. Optional
  string uriHash = 7;

  // mintRestricted specifies whether NFT classification is restricts minting NFTs by others
  bool mintRestricted = 8;

  // burnRestricted specifies whether NFT classification restricts burning NFTs by others
  bool burnRestricted = 9;

  // updateRestricted specifies whether NFT classification restricts updating NFTs by others
  bool updateRestricted = 10;

  // data is the app specific metadata of the NFT class. Optional
  google.protobuf.Any data = 11;
}

message MsgUpdateClassResponse {
}

// this line is used by starport scaffolding # proto/tx/message