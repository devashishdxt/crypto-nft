syntax = "proto3";
package devashishdxt.cryptonft.cryptonft;

import "google/protobuf/any.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/devashishdxt/crypto-nft/x/cryptonft/types";

// Msg defines the Msg service.
service Msg {
      rpc NewClass(MsgNewClass) returns (MsgNewClassResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgNewClass {
  // creator defines creator of NFT classification
  string creator = 1;

  // id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
  string id = 2;

  // name defines the human-readable name of the NFT classification. Optional
  string name = 3;

  // symbol is an abbreviated name for nft classification. Optional
  string symbol = 4;

  // description is a brief description of nft classification. Optional
  string description = 5;

  // uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
  string uri = 6;

  // uri_hash is a hash of the document pointed by uri. Optional
  string uriHash = 7;

  // data is the app specific metadata of the NFT class. Optional
  google.protobuf.Any data = 8;
}

message MsgNewClassResponse {
}

// this line is used by starport scaffolding # proto/tx/message